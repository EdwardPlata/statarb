#!/bin/env python

from optparse import OptionParser
import os


codenames = \
    { 'stop': 100, \
      'ecn':  200, \
      'rate': 300, \
      'reload':  400, \
      'cap': 500, \
      'pcr': 600, \
      'pnl': 700, \
      'tc' : 800, \
      'invis' : 900, \
      'cross' : 1000, \
      'scale' : 1200, \
    }

defhost = '239.255.3.128'
defport = 3130
defrange = 2000300

def main():

    parser = OptionParser()
    parser.add_option('-c', '--code', dest='code', help='Code (name or number)')
    parser.add_option('-m', '--msg1', dest='m', help='message 1 (-m msg)')
    parser.add_option('-n', '--msg2', dest='n', help='message 2 (-n msg)')
    parser.add_option('-g', '--group', dest='host', help='group to use (def '+defhost+')')
    parser.add_option('-p', '--port', dest='port', type=int, help='port to use (def '+str(defport)+')')
    parser.add_option('-r', '--range', dest='range', type=int, help='strategy range to use (def '+str(defrange)+')')

    opt, numstrs = parser.parse_args()
    if opt.host is None: opt.host = defhost
    if opt.port is None: opt.port = defport
    if opt.range is None: opt.range = defrange

    if opt.code is None:
        print "Need a code! Suggested codes (names or numbers work)"
        for n, c in codenames.items():
            print "\t %s (%d)" % (n, c)

        exit(2)

    if opt.code not in set(codenames.keys()):
        try:
            opt.code = int(opt.code)
        except:
            print "Code name %s not known." % opt.code
            exit(2)
    else:
        opt.code = codenames[opt.code]

    nums = []
    for n in numstrs:
        try:
            num = int(n)
            if num > 99 or num < 0:
                print "instance %d not in range 0-99" % num
            else:
                nums.append(num)

        except:
            print "instance '%s' not recognized" % n
            exit(2)

    mstr = '' if opt.m is None else "-m '%s'" % opt.m
    nstr = '' if opt.n is None else "-n '%s'" % opt.n

    for num in nums:
        os.system("/apps/hyp2/live-opteron_rhel4/bin/umsg -h %s -p %d -s %d -c %d %s %s" \
                % (opt.host, opt.port, opt.range + num, opt.code, mstr, nstr))

if __name__ == "__main__":
    main()
